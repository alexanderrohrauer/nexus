/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/dashboards": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Dashboards */
        get: operations["get_dashboards_dashboards_get"];
        put?: never;
        /** Create Dashboard */
        post: operations["create_dashboard_dashboards_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboards/{uuid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Dashboard */
        get: operations["get_dashboard_dashboards__uuid__get"];
        put?: never;
        post?: never;
        /** Delete Dashboard */
        delete: operations["delete_dashboard_dashboards__uuid__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboards/{uuid}/visualizations/{visualization_uuid}/data": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Visualization Data */
        get: operations["get_visualization_data_dashboards__uuid__visualizations__visualization_uuid__data_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboards/{uuid}/visualizations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add Visualization */
        post: operations["add_visualization_dashboards__uuid__visualizations_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboards/{uuid}/visualizations/{visualization_uuid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Visualization */
        put: operations["update_visualization_dashboards__uuid__visualizations__visualization_uuid__put"];
        post?: never;
        /** Remove Visualization */
        delete: operations["remove_visualization_dashboards__uuid__visualizations__visualization_uuid__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/import-task": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Import Task */
        get: operations["get_import_task_import_task_get"];
        /** Update Import Task */
        put: operations["update_import_task_import_task_put"];
        /** Create Import Task */
        post: operations["create_import_task_import_task_post"];
        /** Delete Import Task */
        delete: operations["delete_import_task_import_task_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/import-task/reset-cursors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Reset Cursors */
        put: operations["reset_cursors_import_task_reset_cursors_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/import-task/run": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Run All Import Jobs */
        post: operations["run_all_import_jobs_import_task_run_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/import-task/run-deduplication": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Run Deduplication */
        post: operations["run_deduplication_import_task_run_deduplication_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/import-task/run-deduplication-elimination": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Run Deduplication Elimination */
        post: operations["run_deduplication_elimination_import_task_run_deduplication_elimination_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/researchers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Researchers */
        get: operations["get_researchers_researchers_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/researchers/{uuid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Researcher */
        get: operations["get_researcher_researchers__uuid__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/institutions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Institutions */
        get: operations["get_institutions_institutions_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/institutions/{uuid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Institution */
        get: operations["get_institution_institutions__uuid__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/works": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Works */
        get: operations["get_works_works_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/works/{uuid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Work */
        get: operations["get_work_works__uuid__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** CreateDashboardRequest */
        CreateDashboardRequest: {
            /** Title */
            title: string;
            /** Visualizations */
            visualizations: components["schemas"]["CreateVisualizationRequest"][];
        };
        /** CreateImportTaskRequest */
        CreateImportTaskRequest: {
            /** Cron Expr */
            cron_expr: string;
            /** N Batches */
            n_batches: number;
            /** Keywords */
            keywords: string[];
        };
        /** CreateVisualizationRequest */
        CreateVisualizationRequest: {
            /** Title */
            title: string;
            /** Rows */
            rows: number;
            /** Columns */
            columns: number;
            /** Default Query */
            default_query: unknown[] | Record<string, never>;
            /** Visualization */
            visualization: string;
        };
        /** Dashboard */
        Dashboard: {
            /**
             *  Id
             * @description MongoDB document ObjectID
             */
            _id?: string | null;
            /**
             * Uuid
             * Format: uuid
             */
            uuid?: string;
            /** Title */
            title: string;
            /** Visualizations */
            visualizations: components["schemas"]["Visualization"][];
        };
        /** DashboardMinimal */
        DashboardMinimal: {
            /**
             * Uuid
             * Format: uuid
             */
            uuid: string;
            /** Title */
            title: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /**
         * ImportJobId
         * @enum {string}
         */
        ImportJobId: ImportJobId;
        /** Institution */
        Institution: {
            /** Snm Key */
            snm_key?: string | null;
            /** Duplication Key */
            duplication_key?: string | null;
            /**
             * Marked For Removal
             * @default false
             */
            marked_for_removal: boolean;
            /**
             *  Id
             * @description MongoDB document ObjectID
             */
            _id?: string | null;
            /**
             * Uuid
             * Format: uuid
             */
            uuid?: string;
            /** Imported At */
            imported_at?: string;
            /** Manually Updated At */
            manually_updated_at?: string | null;
            external_id: components["schemas"]["InstitutionExternalId"];
            /** Name */
            name: string;
            /** Acronyms */
            acronyms: string[];
            /** Alternative Names */
            alternative_names: string[];
            /** International Names */
            international_names: {
                [key: string]: string;
            };
            /** City */
            city?: string | null;
            /** Region */
            region?: string | null;
            /**
             * Country
             * @description Is the country code
             */
            country?: string | null;
            /**
             * Location
             * @description Long-Lat
             */
            location?: [
                number,
                number
            ] | null;
            /** Homepage Url */
            homepage_url?: string | null;
            /** Image Url */
            image_url?: string | null;
            /** Parent Institutions Ids */
            parent_institutions_ids: string[];
            /** Type */
            type?: string | null;
            /** Topic Keywords */
            topic_keywords: string[];
            /** Openalex Meta */
            openalex_meta?: Record<string, never> | null;
            /** Orcid Meta */
            orcid_meta?: Record<string, never> | null;
            /** Dblp Meta */
            dblp_meta?: Record<string, never> | null;
        };
        /** InstitutionExternalId */
        InstitutionExternalId: {
            /** Grid */
            grid?: string | null;
            /** Mag */
            mag?: string | null;
            /** Openalex */
            openalex?: string | null;
            /** Ror */
            ror?: string | null;
            /** Wikipedia */
            wikipedia?: string | null;
            /** Wikidata */
            wikidata?: string | null;
        };
        /** Researcher */
        Researcher: {
            /** Snm Key */
            snm_key?: string | null;
            /** Duplication Key */
            duplication_key?: string | null;
            /**
             * Marked For Removal
             * @default false
             */
            marked_for_removal: boolean;
            /**
             *  Id
             * @description MongoDB document ObjectID
             */
            _id?: string | null;
            /**
             * Uuid
             * Format: uuid
             */
            uuid?: string;
            /** Imported At */
            imported_at?: string;
            /** Manually Updated At */
            manually_updated_at?: string | null;
            external_id: components["schemas"]["ResearcherExternalId"];
            /** Full Name */
            full_name: string;
            /** Alternative Names */
            alternative_names?: string[] | null;
            /** Affiliations */
            affiliations?: {
                /** Id */
                id: string;
                /** Collection */
                collection: string;
            }[] | null;
            /** Institution */
            institution?: {
                /** Id */
                id: string;
                /** Collection */
                collection: string;
            } | null;
            /** Topic Keywords */
            topic_keywords?: string[] | null;
            /** Openalex Meta */
            openalex_meta?: Record<string, never> | null;
            /** Orcid Meta */
            orcid_meta?: Record<string, never> | null;
            /** Dblp Meta */
            dblp_meta?: Record<string, never> | null;
        };
        /** ResearcherExternalId */
        ResearcherExternalId: {
            /** Openalex */
            openalex?: string | null;
            /** Orcid */
            orcid?: string | null;
            /** Dblp */
            dblp?: string | null;
            /** Scopus */
            scopus?: string | null;
            /** Twitter */
            twitter?: string | null;
            /** Wikipedia */
            wikipedia?: string | null;
        };
        /** ResetCursorsRequest */
        ResetCursorsRequest: {
            /** Jobs */
            jobs: components["schemas"]["ImportJobId"][];
        };
        /** UpdateImportTaskRequest */
        UpdateImportTaskRequest: {
            /** Cron Expr */
            cron_expr: string;
            /** N Batches */
            n_batches: number;
            /** Keywords */
            keywords: string[];
            /** Jobs */
            jobs: components["schemas"]["ImportJobId"][];
        };
        /** UpdateVisualizationRequest */
        UpdateVisualizationRequest: {
            /** Title */
            title: string;
            /** Rows */
            rows: number;
            /** Columns */
            columns: number;
            /** Default Query */
            default_query: unknown[] | Record<string, never>;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** Visualization */
        Visualization: {
            /**
             * Uuid
             * Format: uuid
             */
            uuid?: string;
            /** Title */
            title: string;
            /** Rows */
            rows: number;
            /** Columns */
            columns: number;
            /** Visualization */
            visualization: string;
            /**
             * Default Query
             * @default {}
             */
            default_query: unknown[] | Record<string, never>;
        };
        /** Work */
        Work: {
            /** Snm Key */
            snm_key?: string | null;
            /** Duplication Key */
            duplication_key?: string | null;
            /**
             * Marked For Removal
             * @default false
             */
            marked_for_removal: boolean;
            /**
             *  Id
             * @description MongoDB document ObjectID
             */
            _id?: string | null;
            /**
             * Uuid
             * Format: uuid
             */
            uuid?: string;
            /** Imported At */
            imported_at?: string;
            /** Manually Updated At */
            manually_updated_at?: string | null;
            external_id: components["schemas"]["WorkExternalId"];
            /** Title */
            title: string;
            type: components["schemas"]["WorkType"];
            /** Publication Year */
            publication_year: number;
            /** Publication Date */
            publication_date?: string | null;
            /** Keywords */
            keywords?: string[] | null;
            /** Authors */
            authors?: {
                /** Id */
                id: string;
                /** Collection */
                collection: string;
            }[] | null;
            /** Language */
            language?: string | null;
            /** Open Access */
            open_access?: boolean | null;
            /** Openalex Meta */
            openalex_meta?: Record<string, never> | null;
            /** Orcid Meta */
            orcid_meta?: Record<string, never> | null;
            /** Dblp Meta */
            dblp_meta?: Record<string, never> | null;
        };
        /** WorkExternalId */
        WorkExternalId: {
            /** Openalex */
            openalex?: string | null;
            /** Mag */
            mag?: string | null;
            /** Dblp */
            dblp?: string | null;
            /** Doi */
            doi?: string | null;
            /** Pmid */
            pmid?: string | null;
            /** Pmcid */
            pmcid?: string | null;
        };
        /** WorkType */
        WorkType: {
            /** Openalex */
            openalex?: string | null;
            /** Orcid */
            orcid?: string | null;
            /** Dblp */
            dblp?: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type SchemaCreateDashboardRequest = components['schemas']['CreateDashboardRequest'];
export type SchemaCreateImportTaskRequest = components['schemas']['CreateImportTaskRequest'];
export type SchemaCreateVisualizationRequest = components['schemas']['CreateVisualizationRequest'];
export type SchemaDashboard = components['schemas']['Dashboard'];
export type SchemaDashboardMinimal = components['schemas']['DashboardMinimal'];
export type SchemaHttpValidationError = components['schemas']['HTTPValidationError'];
export type SchemaImportJobId = components['schemas']['ImportJobId'];
export type SchemaInstitution = components['schemas']['Institution'];
export type SchemaInstitutionExternalId = components['schemas']['InstitutionExternalId'];
export type SchemaResearcher = components['schemas']['Researcher'];
export type SchemaResearcherExternalId = components['schemas']['ResearcherExternalId'];
export type SchemaResetCursorsRequest = components['schemas']['ResetCursorsRequest'];
export type SchemaUpdateImportTaskRequest = components['schemas']['UpdateImportTaskRequest'];
export type SchemaUpdateVisualizationRequest = components['schemas']['UpdateVisualizationRequest'];
export type SchemaValidationError = components['schemas']['ValidationError'];
export type SchemaVisualization = components['schemas']['Visualization'];
export type SchemaWork = components['schemas']['Work'];
export type SchemaWorkExternalId = components['schemas']['WorkExternalId'];
export type SchemaWorkType = components['schemas']['WorkType'];
export type $defs = Record<string, never>;
export interface operations {
    get_dashboards_dashboards_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DashboardMinimal"][];
                };
            };
        };
    };
    create_dashboard_dashboards_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateDashboardRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Dashboard"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_dashboard_dashboards__uuid__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                uuid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Dashboard"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_dashboard_dashboards__uuid__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                uuid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_visualization_data_dashboards__uuid__visualizations__visualization_uuid__data_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                uuid: string;
                visualization_uuid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_visualization_dashboards__uuid__visualizations_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                uuid: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateVisualizationRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_visualization_dashboards__uuid__visualizations__visualization_uuid__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                uuid: string;
                visualization_uuid: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateVisualizationRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Visualization"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    remove_visualization_dashboards__uuid__visualizations__visualization_uuid__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                uuid: string;
                visualization_uuid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Dashboard"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_import_task_import_task_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    update_import_task_import_task_put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateImportTaskRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_import_task_import_task_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateImportTaskRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_import_task_import_task_delete: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    reset_cursors_import_task_reset_cursors_put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResetCursorsRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    run_all_import_jobs_import_task_run_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    run_deduplication_import_task_run_deduplication_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    run_deduplication_elimination_import_task_run_deduplication_elimination_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_researchers_researchers_get: {
        parameters: {
            query?: {
                search?: string | null;
                q?: string;
                sort?: string | null;
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Researcher"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_researcher_researchers__uuid__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                uuid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Researcher"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_institutions_institutions_get: {
        parameters: {
            query?: {
                search?: string | null;
                q?: string;
                sort?: string | null;
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Institution"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_institution_institutions__uuid__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                uuid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Institution"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_works_works_get: {
        parameters: {
            query?: {
                search?: string | null;
                q?: string;
                sort?: string | null;
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Work"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_work_works__uuid__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                uuid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Work"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
export enum ImportJobId {
    openalex_import_job = "openalex_import_job",
    orcid_import_job = "orcid_import_job",
    dblp_import_job = "dblp_import_job"
}
